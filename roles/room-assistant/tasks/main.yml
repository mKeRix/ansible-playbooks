---
- name: Install system dependencies
  become: yes
  apt:
    update_cache: yes
    pkg:
      - libavahi-compat-libdnssd-dev
      - libsystemd-dev
      - bluetooth
      - libbluetooth-dev
      - libudev-dev
      - build-essential
      - libcairo2-dev
      - libpango1.0-dev
      - libjpeg-dev
      - libgif-dev
      - librsvg2-dev
- name: Install room-assistant
  become: yes
  npm:
    name: room-assistant
    version: "{{ room_assistant_version }}"
    global: yes
    unsafe_perm: yes
- name: Install peer dependencies
  npm:
    name: "{{ item }}"
    global: yes
  loop: "{{ room_assistant_peer_dependencies }}"
- name: Find NodeJS
  stat:
    path: /usr/bin/node
    follow: no
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: find_node
- name: Set node capabilities
  become: yes
  community.general.capabilities:
    path: "{{ find_node.stat.lnk_source|default(find_node.stat.path, true) }}"
    capability: cap_net_raw+eip
    state: present
- name: Find hcitool
  stat:
    path: /usr/bin/hcitool
    follow: no
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: find_hcitool
- name: Set hcitool capabilities
  become: yes
  community.general.capabilities:
    path: "{{ find_hcitool.stat.lnk_source|default(find_hcitool.stat.path, true) }}"
    capability: cap_net_raw+eip
    state: present
- name: Find hciconfig
  stat:
    path: /bin/hciconfig
    follow: no
    get_attributes: no
    get_checksum: no
    get_mime: no
  register: find_hciconfig
- name: Set hciconfig capabilities
  become: yes
  community.general.capabilities:
    path: "{{ find_hciconfig.stat.lnk_source|default(find_hciconfig.stat.path, true) }}"
    capability: cap_net_admin+eip
    state: present
- name: Create config directory
  file:
    path: ~/room-assistant/config
    state: directory
    mode: 0755
- name: Create global config file
  when: room_assistant_global_config is defined
  copy:
    dest: "~/room-assistant/config/{{ ansible_hostname }}.yml"
    content: "{{ room_assistant_global_config | to_nice_yaml(indent=2) }}"
    mode: 0644
- name: Create config file
  when: room_assistant_config is defined
  copy:
    dest: "~/room-assistant/config/local.yml"
    content: "{{ room_assistant_config | to_nice_yaml(indent=2) }}"
    mode: 0644
- name: Find room-assistant
  find:
    file_type: link
    paths:
      - /usr/bin
      - /usr/local/bin
      - /opt/nodejs/bin
    patterns: room-assistant
  register: find_room_assistant
- name: Create room-assistant service unit file
  become: yes
  register: unit_file
  copy:
    dest: /etc/systemd/system/room-assistant.service
    content: |
      [Unit]
      Description=room-assistant service

      [Service]
      Type=notify
      ExecStart={{ find_room_assistant.files[0].path }}
      WorkingDirectory={{ ansible_env.HOME }}/room-assistant
      TimeoutStartSec=120
      TimeoutStopSec=30
      Restart=always
      RestartSec=10
      WatchdogSec=60
      User={{ ansible_user }}

      [Install]
      WantedBy=multi-user.target
    mode: 0644
- name: Start room-assistant service
  become: yes
  systemd:
    name: room-assistant
    enabled: yes
    state: restarted
    daemon_reload: "{{ unit_file.changed }}"
